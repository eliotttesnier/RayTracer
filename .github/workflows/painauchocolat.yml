env:
  EXECUTABLES: 'raytracer'

name: painauchocolat
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
    paths:
      - '**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'
    paths:
      - '**'
    types:
      - opened

jobs:
  check_coding_style:
    name: "Check banana coding style"
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Run coding style checker
        run: |
          check.sh "$(pwd)" "$(pwd)"
          tmpfile=$(mktemp)

          echo "0" > "$tmpfile"
          cat coding-style-reports.log | while read -r line; do
            file=$(echo "$line" | cut -d':' -f1 | cut -d'/' -f 2-)
            nbline=$(echo "$line" | cut -d':' -f2)
            title=$(echo "$line" | cut -d':' -f3)" coding style error"
            code=$(echo "$line" | cut -d':' -f4)
            echo "::error title=$title,file=$file,line=$nbline,col=0::$code"
            echo "1" > "$tmpfile"
          done

          if [ "$(cat "$tmpfile")" = "1" ]; then
            rm "$tmpfile"
            exit 1
          fi
          rm "$tmpfile"

  cpplint:
    name: "Check cpplint coding style"
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: checkout@v4
        uses: actions/checkout@v4

      - name: Dependencies
        run: |
          apt update && apt install -y python3-pip
          pip install --break-system-packages cpplint
          chmod +x ./shell/styleChecker.sh

      - name: Check Coding Style
        run: |
          ./shell/styleChecker.sh

      - name: Verify Coding Style
        run: |
          if [ -s coding-style-cpp-reports.log ]; then
            echo "Coding style errors found. See coding-style-cpp-reports.log for details."
            cat coding-style-cpp-reports.log
            exit 1
          else
            echo "No coding style errors found."
          fi

  check_program_compilation:
    name: "Check program compilation"
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:devel
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Build project
        timeout-minutes: 2
        run: ./shell/cmpRelease.sh
      - name: Check executables
        shell: bash
        run: |
          exit_code=0

          IFS=', ' read -r -a array <<< "$EXECUTABLES"

          for element in "${array[@]}"
          do
              if [[ ! -f "$element" ]]; then
                  echo ::error title=$element does not exist::The file $element does not exist.
                  exit_code=1
              fi
              if [[ ! -x "$element" ]]; then
                  echo ::error title=$element is not executable::The file $element cannot be executed.
                  exit_code=1
              fi
          done

          exit $exit_code
