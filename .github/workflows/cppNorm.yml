name: CPP-Norm
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
    paths:
      - '**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'
    paths:
      - '**'

jobs:
  check_coding_style:
    name: "Check coding style"

    runs-on: ubuntu-latest

    container: ghcr.io/epitech/coding-style-checker:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Run coding style checker
        run: |
          check.sh "$(pwd)" "$(pwd)"
          tmpfile=$(mktemp)
          
          echo "0" > "$tmpfile"
          cat coding-style-reports.log | while read -r line; do
            file=$(echo "$line" | cut -d':' -f1 | cut -d'/' -f 2-)
            nbline=$(echo "$line" | cut -d':' -f2)
            title=$(echo "$line" | cut -d':' -f3)" coding style error"
            code=$(echo "$line" | cut -d':' -f4)
            echo "::error title=$title,file=$file,line=$nbline,col=0::$code"
            echo "1" > "$tmpfile"
          done
          
          if [ "$(cat "$tmpfile")" = "1" ]; then
            rm "$tmpfile"
            exit 1
          fi
          rm "$tmpfile"

  cpplint:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/epitech/coding-style-checker:latest

    steps:
      - name: checkout@v4
        uses: actions/checkout@v4

      - name: Dependencies
        run: |
          apt update && apt install -y python3-pip
          pip install --break-system-packages cpplint
          chmod +x styleChecker.sh

      - name: Check Coding Style
        run: |
          ./shell/styleChecker.sh

      - name: Verify Coding Style
        run: |
          if [ -s coding-style-cpp-reports.log ]; then
            echo "Coding style errors found. See coding-style-cpp-reports.log for details."
            cat coding-style-cpp-reports.log
            exit 1
          else
            echo "No coding style errors found."
          fi
